type User {
  id: ID! @unique
  avatar : String
  userName: String! @unique
  email: String! @unique
  firstName: String @default(value:"")
  lastName: String!
  bio: String!
  posts:[Post!]! @relation(name:"UserToPost" onDelete:CASCADE)
  likes:[Like!]! @relation(name:"UserToLike" onDelete:CASCADE)
  comments: [Comment!]! @relation(name:"UserToComment" onDelete:CASCADE)
  followers:[User!]! @relation(name:"FollowRelation")
  following:[User!]! @relation(name:"FollowRelation")
  rooms:[Room!]!
  loginSecret: String
}

type Post {
  id: ID! @unique
  location: String
  caption: String!
  user:User @relation(name:"UserToPost")
  files:[File!]! @relation(name:"FileToPost" onDelete:CASCADE)
  likes : [Like!]! @relation(name:"LikeToPost" onDelete:CASCADE)
  comments: [Comment!]! @relation(name:"CommentToPost" onDelete:CASCADE)
}

type Like {
  id: ID! @unique
  user: User @relation(name:"UserToLike")
  post: Post @relation(name:"LikeToPost")
}

type Comment {
  id: ID! @unique
  text: String!
  user: User @relation(name:"UserToComment")
  post: Post @relation(name:"CommentToPost")
}

type File {
  id: ID! @unique
  url: String!
  post: Post @relation(name:"FileToPost")
}

type Room {
  id: ID! @unique
  participants: [User!]!
  messages: [Message!]!
}

type Message{
  id: ID! @unique
  text: String! 
  from: User! @relation(name:"From")
  to: User! @relation(name:"To")
  room: Room!
}